{"ast":null,"code":"import { __assign } from 'tslib';\nimport { getDefaultValueType } from '../dom/utils/value-types.js';\nimport { isTransformProp } from '../html/utils/transform.js';\nimport { buildSVGAttrs } from './utils/build-attrs.js';\nimport { visualElement } from '../index.js';\nimport { scrapeMotionValuesFromProps } from './utils/scrape-motion-values.js';\nimport { htmlConfig } from '../html/visual-element.js';\nimport { camelToDash } from '../dom/utils/camel-to-dash.js';\nimport { camelCaseAttributes } from './utils/camel-case-attrs.js';\nfunction renderSVG(element, renderState) {\n  htmlConfig.render(element, renderState);\n  for (var key in renderState.attrs) {\n    element.setAttribute(!camelCaseAttributes.has(key) ? camelToDash(key) : key, renderState.attrs[key]);\n  }\n}\nvar svgVisualElement = visualElement(__assign(__assign({}, htmlConfig), {\n  getBaseTarget: function (props, key) {\n    return props[key];\n  },\n  readValueFromInstance: function (domElement, key) {\n    var _a;\n    if (isTransformProp(key)) {\n      return ((_a = getDefaultValueType(key)) === null || _a === void 0 ? void 0 : _a.default) || 0;\n    }\n    key = !camelCaseAttributes.has(key) ? camelToDash(key) : key;\n    return domElement.getAttribute(key);\n  },\n  scrapeMotionValuesFromProps: scrapeMotionValuesFromProps,\n  build: function (_element, renderState, latestValues, projection, layoutState, options, props) {\n    buildSVGAttrs(renderState, latestValues, projection, layoutState, options, props.transformTemplate);\n  },\n  render: renderSVG\n}));\nexport { renderSVG, svgVisualElement };","map":{"version":3,"names":["__assign","getDefaultValueType","isTransformProp","buildSVGAttrs","visualElement","scrapeMotionValuesFromProps","htmlConfig","camelToDash","camelCaseAttributes","renderSVG","element","renderState","render","key","attrs","setAttribute","has","svgVisualElement","getBaseTarget","props","readValueFromInstance","domElement","_a","default","getAttribute","build","_element","latestValues","projection","layoutState","options","transformTemplate"],"sources":["/home/pc/Desktop/react-projects/react-projects/lazy-days/client/node_modules/framer-motion/dist/es/render/svg/visual-element.js"],"sourcesContent":["import { __assign } from 'tslib';\nimport { getDefaultValueType } from '../dom/utils/value-types.js';\nimport { isTransformProp } from '../html/utils/transform.js';\nimport { buildSVGAttrs } from './utils/build-attrs.js';\nimport { visualElement } from '../index.js';\nimport { scrapeMotionValuesFromProps } from './utils/scrape-motion-values.js';\nimport { htmlConfig } from '../html/visual-element.js';\nimport { camelToDash } from '../dom/utils/camel-to-dash.js';\nimport { camelCaseAttributes } from './utils/camel-case-attrs.js';\n\nfunction renderSVG(element, renderState) {\n    htmlConfig.render(element, renderState);\n    for (var key in renderState.attrs) {\n        element.setAttribute(!camelCaseAttributes.has(key) ? camelToDash(key) : key, renderState.attrs[key]);\n    }\n}\nvar svgVisualElement = visualElement(__assign(__assign({}, htmlConfig), { getBaseTarget: function (props, key) {\n        return props[key];\n    },\n    readValueFromInstance: function (domElement, key) {\n        var _a;\n        if (isTransformProp(key)) {\n            return ((_a = getDefaultValueType(key)) === null || _a === void 0 ? void 0 : _a.default) || 0;\n        }\n        key = !camelCaseAttributes.has(key) ? camelToDash(key) : key;\n        return domElement.getAttribute(key);\n    },\n    scrapeMotionValuesFromProps: scrapeMotionValuesFromProps,\n    build: function (_element, renderState, latestValues, projection, layoutState, options, props) {\n        buildSVGAttrs(renderState, latestValues, projection, layoutState, options, props.transformTemplate);\n    }, render: renderSVG }));\n\nexport { renderSVG, svgVisualElement };\n"],"mappings":"AAAA,SAASA,QAAQ,QAAQ,OAAO;AAChC,SAASC,mBAAmB,QAAQ,6BAA6B;AACjE,SAASC,eAAe,QAAQ,4BAA4B;AAC5D,SAASC,aAAa,QAAQ,wBAAwB;AACtD,SAASC,aAAa,QAAQ,aAAa;AAC3C,SAASC,2BAA2B,QAAQ,iCAAiC;AAC7E,SAASC,UAAU,QAAQ,2BAA2B;AACtD,SAASC,WAAW,QAAQ,+BAA+B;AAC3D,SAASC,mBAAmB,QAAQ,6BAA6B;AAEjE,SAASC,SAAS,CAACC,OAAO,EAAEC,WAAW,EAAE;EACrCL,UAAU,CAACM,MAAM,CAACF,OAAO,EAAEC,WAAW,CAAC;EACvC,KAAK,IAAIE,GAAG,IAAIF,WAAW,CAACG,KAAK,EAAE;IAC/BJ,OAAO,CAACK,YAAY,CAAC,CAACP,mBAAmB,CAACQ,GAAG,CAACH,GAAG,CAAC,GAAGN,WAAW,CAACM,GAAG,CAAC,GAAGA,GAAG,EAAEF,WAAW,CAACG,KAAK,CAACD,GAAG,CAAC,CAAC;EACxG;AACJ;AACA,IAAII,gBAAgB,GAAGb,aAAa,CAACJ,QAAQ,CAACA,QAAQ,CAAC,CAAC,CAAC,EAAEM,UAAU,CAAC,EAAE;EAAEY,aAAa,EAAE,UAAUC,KAAK,EAAEN,GAAG,EAAE;IACvG,OAAOM,KAAK,CAACN,GAAG,CAAC;EACrB,CAAC;EACDO,qBAAqB,EAAE,UAAUC,UAAU,EAAER,GAAG,EAAE;IAC9C,IAAIS,EAAE;IACN,IAAIpB,eAAe,CAACW,GAAG,CAAC,EAAE;MACtB,OAAO,CAAC,CAACS,EAAE,GAAGrB,mBAAmB,CAACY,GAAG,CAAC,MAAM,IAAI,IAAIS,EAAE,KAAK,KAAK,CAAC,GAAG,KAAK,CAAC,GAAGA,EAAE,CAACC,OAAO,KAAK,CAAC;IACjG;IACAV,GAAG,GAAG,CAACL,mBAAmB,CAACQ,GAAG,CAACH,GAAG,CAAC,GAAGN,WAAW,CAACM,GAAG,CAAC,GAAGA,GAAG;IAC5D,OAAOQ,UAAU,CAACG,YAAY,CAACX,GAAG,CAAC;EACvC,CAAC;EACDR,2BAA2B,EAAEA,2BAA2B;EACxDoB,KAAK,EAAE,UAAUC,QAAQ,EAAEf,WAAW,EAAEgB,YAAY,EAAEC,UAAU,EAAEC,WAAW,EAAEC,OAAO,EAAEX,KAAK,EAAE;IAC3FhB,aAAa,CAACQ,WAAW,EAAEgB,YAAY,EAAEC,UAAU,EAAEC,WAAW,EAAEC,OAAO,EAAEX,KAAK,CAACY,iBAAiB,CAAC;EACvG,CAAC;EAAEnB,MAAM,EAAEH;AAAU,CAAC,CAAC,CAAC;AAE5B,SAASA,SAAS,EAAEQ,gBAAgB"},"metadata":{},"sourceType":"module"}