{"ast":null,"code":"import { useContext, useEffect } from 'react';\nimport { __assign } from 'tslib';\nimport { MotionConfigContext } from '../../context/MotionConfigContext.js';\nimport { useConstant } from '../../utils/use-constant.js';\nimport { VisualElementDragControls } from './VisualElementDragControls.js';\n\n/**\n * A hook that allows an element to be dragged.\n *\n * @internal\n */\nfunction useDrag(props, visualElement) {\n  var groupDragControls = props.dragControls;\n  var transformPagePoint = useContext(MotionConfigContext).transformPagePoint;\n  var dragControls = useConstant(function () {\n    return new VisualElementDragControls({\n      visualElement: visualElement\n    });\n  });\n  dragControls.setProps(__assign(__assign({}, props), {\n    transformPagePoint: transformPagePoint\n  }));\n  // If we've been provided a DragControls for manual control over the drag gesture,\n  // subscribe this component to it on mount.\n  useEffect(function () {\n    return groupDragControls && groupDragControls.subscribe(dragControls);\n  }, [dragControls]);\n  // Mount the drag controls with the visualElement\n  useEffect(function () {\n    return dragControls.mount(visualElement);\n  }, []);\n}\nexport { useDrag };","map":{"version":3,"names":["useContext","useEffect","__assign","MotionConfigContext","useConstant","VisualElementDragControls","useDrag","props","visualElement","groupDragControls","dragControls","transformPagePoint","setProps","subscribe","mount"],"sources":["/home/pc/Desktop/react-projects/react-projects/lazy-days/client/node_modules/framer-motion/dist/es/gestures/drag/use-drag.js"],"sourcesContent":["import { useContext, useEffect } from 'react';\nimport { __assign } from 'tslib';\nimport { MotionConfigContext } from '../../context/MotionConfigContext.js';\nimport { useConstant } from '../../utils/use-constant.js';\nimport { VisualElementDragControls } from './VisualElementDragControls.js';\n\n/**\n * A hook that allows an element to be dragged.\n *\n * @internal\n */\nfunction useDrag(props, visualElement) {\n    var groupDragControls = props.dragControls;\n    var transformPagePoint = useContext(MotionConfigContext).transformPagePoint;\n    var dragControls = useConstant(function () {\n        return new VisualElementDragControls({\n            visualElement: visualElement,\n        });\n    });\n    dragControls.setProps(__assign(__assign({}, props), { transformPagePoint: transformPagePoint }));\n    // If we've been provided a DragControls for manual control over the drag gesture,\n    // subscribe this component to it on mount.\n    useEffect(function () { return groupDragControls && groupDragControls.subscribe(dragControls); }, [dragControls]);\n    // Mount the drag controls with the visualElement\n    useEffect(function () { return dragControls.mount(visualElement); }, []);\n}\n\nexport { useDrag };\n"],"mappings":"AAAA,SAASA,UAAU,EAAEC,SAAS,QAAQ,OAAO;AAC7C,SAASC,QAAQ,QAAQ,OAAO;AAChC,SAASC,mBAAmB,QAAQ,sCAAsC;AAC1E,SAASC,WAAW,QAAQ,6BAA6B;AACzD,SAASC,yBAAyB,QAAQ,gCAAgC;;AAE1E;AACA;AACA;AACA;AACA;AACA,SAASC,OAAO,CAACC,KAAK,EAAEC,aAAa,EAAE;EACnC,IAAIC,iBAAiB,GAAGF,KAAK,CAACG,YAAY;EAC1C,IAAIC,kBAAkB,GAAGX,UAAU,CAACG,mBAAmB,CAAC,CAACQ,kBAAkB;EAC3E,IAAID,YAAY,GAAGN,WAAW,CAAC,YAAY;IACvC,OAAO,IAAIC,yBAAyB,CAAC;MACjCG,aAAa,EAAEA;IACnB,CAAC,CAAC;EACN,CAAC,CAAC;EACFE,YAAY,CAACE,QAAQ,CAACV,QAAQ,CAACA,QAAQ,CAAC,CAAC,CAAC,EAAEK,KAAK,CAAC,EAAE;IAAEI,kBAAkB,EAAEA;EAAmB,CAAC,CAAC,CAAC;EAChG;EACA;EACAV,SAAS,CAAC,YAAY;IAAE,OAAOQ,iBAAiB,IAAIA,iBAAiB,CAACI,SAAS,CAACH,YAAY,CAAC;EAAE,CAAC,EAAE,CAACA,YAAY,CAAC,CAAC;EACjH;EACAT,SAAS,CAAC,YAAY;IAAE,OAAOS,YAAY,CAACI,KAAK,CAACN,aAAa,CAAC;EAAE,CAAC,EAAE,EAAE,CAAC;AAC5E;AAEA,SAASF,OAAO"},"metadata":{},"sourceType":"module"}