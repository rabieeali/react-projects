{"ast":null,"code":"import dayjs from 'dayjs';\n\n// for storing current month / year details\n\n// for incrementing MonthYear\nexport function getUpdatedMonthYear(monthYear, monthIncrement) {\n  // the clone is necessary to prevent mutation\n  return monthYear.startDate.clone().add(monthIncrement, 'months');\n}\n\n// get calendar-relevant data for the month containing initialDate\nexport function getMonthYearDetails(initialDate) {\n  const month = initialDate.format('MM');\n  const year = initialDate.format('YYYY');\n  const startDate = dayjs(`${year}${month}01`);\n  const firstDOW = Number(startDate.format('d'));\n  const lastDate = Number(startDate.clone().endOf('month').format('DD'));\n  const monthName = startDate.format('MMMM');\n  return {\n    startDate,\n    firstDOW,\n    lastDate,\n    monthName,\n    month,\n    year\n  };\n}\nexport function getNewMonthYear(prevData, monthIncrement) {\n  // update the monthYear by the specified increment\n  const newMonthYear = getUpdatedMonthYear(prevData, monthIncrement);\n\n  // return object with the details for the new monthYear\n  return getMonthYearDetails(newMonthYear);\n}","map":{"version":3,"names":["dayjs","getUpdatedMonthYear","monthYear","monthIncrement","startDate","clone","add","getMonthYearDetails","initialDate","month","format","year","firstDOW","Number","lastDate","endOf","monthName","getNewMonthYear","prevData","newMonthYear"],"sources":["/home/pc/Desktop/react-projects/react-projects/lazy-days/client/src/components/appointments/hooks/monthYear.ts"],"sourcesContent":["import dayjs from 'dayjs';\n\n// for storing current month / year details\nexport interface MonthYear {\n  startDate: dayjs.Dayjs; // first day of the month\n  firstDOW: number; // day of week; 0 === Sunday\n  lastDate: number; // last date of the month\n  monthName: string; // name of the month\n  month: string; // two digit month number\n  year: string; // four digit year\n}\n\n// for incrementing MonthYear\nexport function getUpdatedMonthYear(\n  monthYear: MonthYear,\n  monthIncrement: number,\n): dayjs.Dayjs {\n  // the clone is necessary to prevent mutation\n  return monthYear.startDate.clone().add(monthIncrement, 'months');\n}\n\n// get calendar-relevant data for the month containing initialDate\nexport function getMonthYearDetails(initialDate: dayjs.Dayjs): MonthYear {\n  const month = initialDate.format('MM');\n  const year = initialDate.format('YYYY');\n  const startDate = dayjs(`${year}${month}01`);\n  const firstDOW = Number(startDate.format('d'));\n  const lastDate = Number(startDate.clone().endOf('month').format('DD'));\n  const monthName = startDate.format('MMMM');\n  return { startDate, firstDOW, lastDate, monthName, month, year };\n}\n\nexport function getNewMonthYear(\n  prevData: MonthYear,\n  monthIncrement: number,\n): MonthYear {\n  // update the monthYear by the specified increment\n  const newMonthYear = getUpdatedMonthYear(prevData, monthIncrement);\n\n  // return object with the details for the new monthYear\n  return getMonthYearDetails(newMonthYear);\n}\n"],"mappings":"AAAA,OAAOA,KAAK,MAAM,OAAO;;AAEzB;;AAUA;AACA,OAAO,SAASC,mBAAmB,CACjCC,SAAoB,EACpBC,cAAsB,EACT;EACb;EACA,OAAOD,SAAS,CAACE,SAAS,CAACC,KAAK,EAAE,CAACC,GAAG,CAACH,cAAc,EAAE,QAAQ,CAAC;AAClE;;AAEA;AACA,OAAO,SAASI,mBAAmB,CAACC,WAAwB,EAAa;EACvE,MAAMC,KAAK,GAAGD,WAAW,CAACE,MAAM,CAAC,IAAI,CAAC;EACtC,MAAMC,IAAI,GAAGH,WAAW,CAACE,MAAM,CAAC,MAAM,CAAC;EACvC,MAAMN,SAAS,GAAGJ,KAAK,CAAE,GAAEW,IAAK,GAAEF,KAAM,IAAG,CAAC;EAC5C,MAAMG,QAAQ,GAAGC,MAAM,CAACT,SAAS,CAACM,MAAM,CAAC,GAAG,CAAC,CAAC;EAC9C,MAAMI,QAAQ,GAAGD,MAAM,CAACT,SAAS,CAACC,KAAK,EAAE,CAACU,KAAK,CAAC,OAAO,CAAC,CAACL,MAAM,CAAC,IAAI,CAAC,CAAC;EACtE,MAAMM,SAAS,GAAGZ,SAAS,CAACM,MAAM,CAAC,MAAM,CAAC;EAC1C,OAAO;IAAEN,SAAS;IAAEQ,QAAQ;IAAEE,QAAQ;IAAEE,SAAS;IAAEP,KAAK;IAAEE;EAAK,CAAC;AAClE;AAEA,OAAO,SAASM,eAAe,CAC7BC,QAAmB,EACnBf,cAAsB,EACX;EACX;EACA,MAAMgB,YAAY,GAAGlB,mBAAmB,CAACiB,QAAQ,EAAEf,cAAc,CAAC;;EAElE;EACA,OAAOI,mBAAmB,CAACY,YAAY,CAAC;AAC1C"},"metadata":{},"sourceType":"module"}