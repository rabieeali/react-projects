{"ast":null,"code":"import { useContext, useState, useEffect } from 'react';\nimport { __read } from 'tslib';\nimport { MotionConfigContext } from '../context/MotionConfigContext.js';\nimport { useConstant } from '../utils/use-constant.js';\nimport { motionValue } from './index.js';\n\n/**\n * Creates a `MotionValue` to track the state and velocity of a value.\n *\n * Usually, these are created automatically. For advanced use-cases, like use with `useTransform`, you can create `MotionValue`s externally and pass them into the animated component via the `style` prop.\n *\n * @library\n *\n * ```jsx\n * export function MyComponent() {\n *   const scale = useMotionValue(1)\n *\n *   return <Frame scale={scale} />\n * }\n * ```\n *\n * @motion\n *\n * ```jsx\n * export const MyComponent = () => {\n *   const scale = useMotionValue(1)\n *\n *   return <motion.div style={{ scale }} />\n * }\n * ```\n *\n * @param initial - The initial state.\n *\n * @public\n */\nfunction useMotionValue(initial) {\n  var value = useConstant(function () {\n    return motionValue(initial);\n  });\n  /**\n   * If this motion value is being used in static mode, like on\n   * the Framer canvas, force components to rerender when the motion\n   * value is updated.\n   */\n  var isStatic = useContext(MotionConfigContext).isStatic;\n  if (isStatic) {\n    var _a = __read(useState(initial), 2),\n      setLatest_1 = _a[1];\n    useEffect(function () {\n      return value.onChange(setLatest_1);\n    }, []);\n  }\n  return value;\n}\nexport { useMotionValue };","map":{"version":3,"names":["useContext","useState","useEffect","__read","MotionConfigContext","useConstant","motionValue","useMotionValue","initial","value","isStatic","_a","setLatest_1","onChange"],"sources":["/home/pc/Desktop/react-projects/react-projects/lazy-days/client/node_modules/framer-motion/dist/es/value/use-motion-value.js"],"sourcesContent":["import { useContext, useState, useEffect } from 'react';\nimport { __read } from 'tslib';\nimport { MotionConfigContext } from '../context/MotionConfigContext.js';\nimport { useConstant } from '../utils/use-constant.js';\nimport { motionValue } from './index.js';\n\n/**\n * Creates a `MotionValue` to track the state and velocity of a value.\n *\n * Usually, these are created automatically. For advanced use-cases, like use with `useTransform`, you can create `MotionValue`s externally and pass them into the animated component via the `style` prop.\n *\n * @library\n *\n * ```jsx\n * export function MyComponent() {\n *   const scale = useMotionValue(1)\n *\n *   return <Frame scale={scale} />\n * }\n * ```\n *\n * @motion\n *\n * ```jsx\n * export const MyComponent = () => {\n *   const scale = useMotionValue(1)\n *\n *   return <motion.div style={{ scale }} />\n * }\n * ```\n *\n * @param initial - The initial state.\n *\n * @public\n */\nfunction useMotionValue(initial) {\n    var value = useConstant(function () { return motionValue(initial); });\n    /**\n     * If this motion value is being used in static mode, like on\n     * the Framer canvas, force components to rerender when the motion\n     * value is updated.\n     */\n    var isStatic = useContext(MotionConfigContext).isStatic;\n    if (isStatic) {\n        var _a = __read(useState(initial), 2), setLatest_1 = _a[1];\n        useEffect(function () { return value.onChange(setLatest_1); }, []);\n    }\n    return value;\n}\n\nexport { useMotionValue };\n"],"mappings":"AAAA,SAASA,UAAU,EAAEC,QAAQ,EAAEC,SAAS,QAAQ,OAAO;AACvD,SAASC,MAAM,QAAQ,OAAO;AAC9B,SAASC,mBAAmB,QAAQ,mCAAmC;AACvE,SAASC,WAAW,QAAQ,0BAA0B;AACtD,SAASC,WAAW,QAAQ,YAAY;;AAExC;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,SAASC,cAAc,CAACC,OAAO,EAAE;EAC7B,IAAIC,KAAK,GAAGJ,WAAW,CAAC,YAAY;IAAE,OAAOC,WAAW,CAACE,OAAO,CAAC;EAAE,CAAC,CAAC;EACrE;AACJ;AACA;AACA;AACA;EACI,IAAIE,QAAQ,GAAGV,UAAU,CAACI,mBAAmB,CAAC,CAACM,QAAQ;EACvD,IAAIA,QAAQ,EAAE;IACV,IAAIC,EAAE,GAAGR,MAAM,CAACF,QAAQ,CAACO,OAAO,CAAC,EAAE,CAAC,CAAC;MAAEI,WAAW,GAAGD,EAAE,CAAC,CAAC,CAAC;IAC1DT,SAAS,CAAC,YAAY;MAAE,OAAOO,KAAK,CAACI,QAAQ,CAACD,WAAW,CAAC;IAAE,CAAC,EAAE,EAAE,CAAC;EACtE;EACA,OAAOH,KAAK;AAChB;AAEA,SAASF,cAAc"},"metadata":{},"sourceType":"module"}