{"ast":null,"code":"import { __assign } from 'tslib';\nimport { number, alpha } from '../numbers/index.js';\nimport { sanitize, clamp } from '../utils.js';\nimport { isColorString, splitColor } from './utils.js';\nvar clampRgbUnit = clamp(0, 255);\nvar rgbUnit = __assign(__assign({}, number), {\n  transform: function (v) {\n    return Math.round(clampRgbUnit(v));\n  }\n});\nvar rgba = {\n  test: isColorString('rgb', 'red'),\n  parse: splitColor('red', 'green', 'blue'),\n  transform: function (_a) {\n    var red = _a.red,\n      green = _a.green,\n      blue = _a.blue,\n      _b = _a.alpha,\n      alpha$1 = _b === void 0 ? 1 : _b;\n    return 'rgba(' + rgbUnit.transform(red) + ', ' + rgbUnit.transform(green) + ', ' + rgbUnit.transform(blue) + ', ' + sanitize(alpha.transform(alpha$1)) + ')';\n  }\n};\nexport { rgbUnit, rgba };","map":{"version":3,"names":["__assign","number","alpha","sanitize","clamp","isColorString","splitColor","clampRgbUnit","rgbUnit","transform","v","Math","round","rgba","test","parse","_a","red","green","blue","_b","alpha$1"],"sources":["/home/pc/Desktop/react-projects/react-projects/lazy-days/client/node_modules/style-value-types/dist/es/color/rgba.js"],"sourcesContent":["import { __assign } from 'tslib';\nimport { number, alpha } from '../numbers/index.js';\nimport { sanitize, clamp } from '../utils.js';\nimport { isColorString, splitColor } from './utils.js';\n\nvar clampRgbUnit = clamp(0, 255);\nvar rgbUnit = __assign(__assign({}, number), { transform: function (v) { return Math.round(clampRgbUnit(v)); } });\nvar rgba = {\n    test: isColorString('rgb', 'red'),\n    parse: splitColor('red', 'green', 'blue'),\n    transform: function (_a) {\n        var red = _a.red, green = _a.green, blue = _a.blue, _b = _a.alpha, alpha$1 = _b === void 0 ? 1 : _b;\n        return 'rgba(' +\n            rgbUnit.transform(red) +\n            ', ' +\n            rgbUnit.transform(green) +\n            ', ' +\n            rgbUnit.transform(blue) +\n            ', ' +\n            sanitize(alpha.transform(alpha$1)) +\n            ')';\n    },\n};\n\nexport { rgbUnit, rgba };\n"],"mappings":"AAAA,SAASA,QAAQ,QAAQ,OAAO;AAChC,SAASC,MAAM,EAAEC,KAAK,QAAQ,qBAAqB;AACnD,SAASC,QAAQ,EAAEC,KAAK,QAAQ,aAAa;AAC7C,SAASC,aAAa,EAAEC,UAAU,QAAQ,YAAY;AAEtD,IAAIC,YAAY,GAAGH,KAAK,CAAC,CAAC,EAAE,GAAG,CAAC;AAChC,IAAII,OAAO,GAAGR,QAAQ,CAACA,QAAQ,CAAC,CAAC,CAAC,EAAEC,MAAM,CAAC,EAAE;EAAEQ,SAAS,EAAE,UAAUC,CAAC,EAAE;IAAE,OAAOC,IAAI,CAACC,KAAK,CAACL,YAAY,CAACG,CAAC,CAAC,CAAC;EAAE;AAAE,CAAC,CAAC;AACjH,IAAIG,IAAI,GAAG;EACPC,IAAI,EAAET,aAAa,CAAC,KAAK,EAAE,KAAK,CAAC;EACjCU,KAAK,EAAET,UAAU,CAAC,KAAK,EAAE,OAAO,EAAE,MAAM,CAAC;EACzCG,SAAS,EAAE,UAAUO,EAAE,EAAE;IACrB,IAAIC,GAAG,GAAGD,EAAE,CAACC,GAAG;MAAEC,KAAK,GAAGF,EAAE,CAACE,KAAK;MAAEC,IAAI,GAAGH,EAAE,CAACG,IAAI;MAAEC,EAAE,GAAGJ,EAAE,CAACd,KAAK;MAAEmB,OAAO,GAAGD,EAAE,KAAK,KAAK,CAAC,GAAG,CAAC,GAAGA,EAAE;IACnG,OAAO,OAAO,GACVZ,OAAO,CAACC,SAAS,CAACQ,GAAG,CAAC,GACtB,IAAI,GACJT,OAAO,CAACC,SAAS,CAACS,KAAK,CAAC,GACxB,IAAI,GACJV,OAAO,CAACC,SAAS,CAACU,IAAI,CAAC,GACvB,IAAI,GACJhB,QAAQ,CAACD,KAAK,CAACO,SAAS,CAACY,OAAO,CAAC,CAAC,GAClC,GAAG;EACX;AACJ,CAAC;AAED,SAASb,OAAO,EAAEK,IAAI"},"metadata":{},"sourceType":"module"}