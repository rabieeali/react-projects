{"ast":null,"code":"import { __assign } from 'tslib';\nimport { noop } from '../noop.js';\n\n/**\n * Bounding boxes tend to be defined as top, left, right, bottom. For various operations\n * it's easier to consider each axis individually. This function returns a bounding box\n * as a map of single-axis min/max values.\n */\nfunction convertBoundingBoxToAxisBox(_a) {\n  var top = _a.top,\n    left = _a.left,\n    right = _a.right,\n    bottom = _a.bottom;\n  return {\n    x: {\n      min: left,\n      max: right\n    },\n    y: {\n      min: top,\n      max: bottom\n    }\n  };\n}\nfunction convertAxisBoxToBoundingBox(_a) {\n  var x = _a.x,\n    y = _a.y;\n  return {\n    top: y.min,\n    bottom: y.max,\n    left: x.min,\n    right: x.max\n  };\n}\n/**\n * Applies a TransformPoint function to a bounding box. TransformPoint is usually a function\n * provided by Framer to allow measured points to be corrected for device scaling. This is used\n * when measuring DOM elements and DOM event points.\n */\nfunction transformBoundingBox(_a, transformPoint) {\n  var top = _a.top,\n    left = _a.left,\n    bottom = _a.bottom,\n    right = _a.right;\n  if (transformPoint === void 0) {\n    transformPoint = noop;\n  }\n  var topLeft = transformPoint({\n    x: left,\n    y: top\n  });\n  var bottomRight = transformPoint({\n    x: right,\n    y: bottom\n  });\n  return {\n    top: topLeft.y,\n    left: topLeft.x,\n    bottom: bottomRight.y,\n    right: bottomRight.x\n  };\n}\n/**\n * Create an empty axis box of zero size\n */\nfunction axisBox() {\n  return {\n    x: {\n      min: 0,\n      max: 1\n    },\n    y: {\n      min: 0,\n      max: 1\n    }\n  };\n}\nfunction copyAxisBox(box) {\n  return {\n    x: __assign({}, box.x),\n    y: __assign({}, box.y)\n  };\n}\n/**\n * Create an empty box delta\n */\nvar zeroDelta = {\n  translate: 0,\n  scale: 1,\n  origin: 0,\n  originPoint: 0\n};\nfunction delta() {\n  return {\n    x: __assign({}, zeroDelta),\n    y: __assign({}, zeroDelta)\n  };\n}\nexport { axisBox, convertAxisBoxToBoundingBox, convertBoundingBoxToAxisBox, copyAxisBox, delta, transformBoundingBox };","map":{"version":3,"names":["__assign","noop","convertBoundingBoxToAxisBox","_a","top","left","right","bottom","x","min","max","y","convertAxisBoxToBoundingBox","transformBoundingBox","transformPoint","topLeft","bottomRight","axisBox","copyAxisBox","box","zeroDelta","translate","scale","origin","originPoint","delta"],"sources":["/home/pc/Desktop/react-projects/react-projects/lazy-days/client/node_modules/framer-motion/dist/es/utils/geometry/index.js"],"sourcesContent":["import { __assign } from 'tslib';\nimport { noop } from '../noop.js';\n\n/**\n * Bounding boxes tend to be defined as top, left, right, bottom. For various operations\n * it's easier to consider each axis individually. This function returns a bounding box\n * as a map of single-axis min/max values.\n */\nfunction convertBoundingBoxToAxisBox(_a) {\n    var top = _a.top, left = _a.left, right = _a.right, bottom = _a.bottom;\n    return {\n        x: { min: left, max: right },\n        y: { min: top, max: bottom },\n    };\n}\nfunction convertAxisBoxToBoundingBox(_a) {\n    var x = _a.x, y = _a.y;\n    return {\n        top: y.min,\n        bottom: y.max,\n        left: x.min,\n        right: x.max,\n    };\n}\n/**\n * Applies a TransformPoint function to a bounding box. TransformPoint is usually a function\n * provided by Framer to allow measured points to be corrected for device scaling. This is used\n * when measuring DOM elements and DOM event points.\n */\nfunction transformBoundingBox(_a, transformPoint) {\n    var top = _a.top, left = _a.left, bottom = _a.bottom, right = _a.right;\n    if (transformPoint === void 0) { transformPoint = noop; }\n    var topLeft = transformPoint({ x: left, y: top });\n    var bottomRight = transformPoint({ x: right, y: bottom });\n    return {\n        top: topLeft.y,\n        left: topLeft.x,\n        bottom: bottomRight.y,\n        right: bottomRight.x,\n    };\n}\n/**\n * Create an empty axis box of zero size\n */\nfunction axisBox() {\n    return { x: { min: 0, max: 1 }, y: { min: 0, max: 1 } };\n}\nfunction copyAxisBox(box) {\n    return {\n        x: __assign({}, box.x),\n        y: __assign({}, box.y),\n    };\n}\n/**\n * Create an empty box delta\n */\nvar zeroDelta = {\n    translate: 0,\n    scale: 1,\n    origin: 0,\n    originPoint: 0,\n};\nfunction delta() {\n    return {\n        x: __assign({}, zeroDelta),\n        y: __assign({}, zeroDelta),\n    };\n}\n\nexport { axisBox, convertAxisBoxToBoundingBox, convertBoundingBoxToAxisBox, copyAxisBox, delta, transformBoundingBox };\n"],"mappings":"AAAA,SAASA,QAAQ,QAAQ,OAAO;AAChC,SAASC,IAAI,QAAQ,YAAY;;AAEjC;AACA;AACA;AACA;AACA;AACA,SAASC,2BAA2B,CAACC,EAAE,EAAE;EACrC,IAAIC,GAAG,GAAGD,EAAE,CAACC,GAAG;IAAEC,IAAI,GAAGF,EAAE,CAACE,IAAI;IAAEC,KAAK,GAAGH,EAAE,CAACG,KAAK;IAAEC,MAAM,GAAGJ,EAAE,CAACI,MAAM;EACtE,OAAO;IACHC,CAAC,EAAE;MAAEC,GAAG,EAAEJ,IAAI;MAAEK,GAAG,EAAEJ;IAAM,CAAC;IAC5BK,CAAC,EAAE;MAAEF,GAAG,EAAEL,GAAG;MAAEM,GAAG,EAAEH;IAAO;EAC/B,CAAC;AACL;AACA,SAASK,2BAA2B,CAACT,EAAE,EAAE;EACrC,IAAIK,CAAC,GAAGL,EAAE,CAACK,CAAC;IAAEG,CAAC,GAAGR,EAAE,CAACQ,CAAC;EACtB,OAAO;IACHP,GAAG,EAAEO,CAAC,CAACF,GAAG;IACVF,MAAM,EAAEI,CAAC,CAACD,GAAG;IACbL,IAAI,EAAEG,CAAC,CAACC,GAAG;IACXH,KAAK,EAAEE,CAAC,CAACE;EACb,CAAC;AACL;AACA;AACA;AACA;AACA;AACA;AACA,SAASG,oBAAoB,CAACV,EAAE,EAAEW,cAAc,EAAE;EAC9C,IAAIV,GAAG,GAAGD,EAAE,CAACC,GAAG;IAAEC,IAAI,GAAGF,EAAE,CAACE,IAAI;IAAEE,MAAM,GAAGJ,EAAE,CAACI,MAAM;IAAED,KAAK,GAAGH,EAAE,CAACG,KAAK;EACtE,IAAIQ,cAAc,KAAK,KAAK,CAAC,EAAE;IAAEA,cAAc,GAAGb,IAAI;EAAE;EACxD,IAAIc,OAAO,GAAGD,cAAc,CAAC;IAAEN,CAAC,EAAEH,IAAI;IAAEM,CAAC,EAAEP;EAAI,CAAC,CAAC;EACjD,IAAIY,WAAW,GAAGF,cAAc,CAAC;IAAEN,CAAC,EAAEF,KAAK;IAAEK,CAAC,EAAEJ;EAAO,CAAC,CAAC;EACzD,OAAO;IACHH,GAAG,EAAEW,OAAO,CAACJ,CAAC;IACdN,IAAI,EAAEU,OAAO,CAACP,CAAC;IACfD,MAAM,EAAES,WAAW,CAACL,CAAC;IACrBL,KAAK,EAAEU,WAAW,CAACR;EACvB,CAAC;AACL;AACA;AACA;AACA;AACA,SAASS,OAAO,GAAG;EACf,OAAO;IAAET,CAAC,EAAE;MAAEC,GAAG,EAAE,CAAC;MAAEC,GAAG,EAAE;IAAE,CAAC;IAAEC,CAAC,EAAE;MAAEF,GAAG,EAAE,CAAC;MAAEC,GAAG,EAAE;IAAE;EAAE,CAAC;AAC3D;AACA,SAASQ,WAAW,CAACC,GAAG,EAAE;EACtB,OAAO;IACHX,CAAC,EAAER,QAAQ,CAAC,CAAC,CAAC,EAAEmB,GAAG,CAACX,CAAC,CAAC;IACtBG,CAAC,EAAEX,QAAQ,CAAC,CAAC,CAAC,EAAEmB,GAAG,CAACR,CAAC;EACzB,CAAC;AACL;AACA;AACA;AACA;AACA,IAAIS,SAAS,GAAG;EACZC,SAAS,EAAE,CAAC;EACZC,KAAK,EAAE,CAAC;EACRC,MAAM,EAAE,CAAC;EACTC,WAAW,EAAE;AACjB,CAAC;AACD,SAASC,KAAK,GAAG;EACb,OAAO;IACHjB,CAAC,EAAER,QAAQ,CAAC,CAAC,CAAC,EAAEoB,SAAS,CAAC;IAC1BT,CAAC,EAAEX,QAAQ,CAAC,CAAC,CAAC,EAAEoB,SAAS;EAC7B,CAAC;AACL;AAEA,SAASH,OAAO,EAAEL,2BAA2B,EAAEV,2BAA2B,EAAEgB,WAAW,EAAEO,KAAK,EAAEZ,oBAAoB"},"metadata":{},"sourceType":"module"}