{"ast":null,"code":"var _jsxFileName = \"/home/pc/Desktop/react-projects/react-projects/lazy-days/client/src/components/treatments/Treatments.tsx\",\n  _s = $RefreshSig$();\nimport { Box, Heading, HStack } from '@chakra-ui/react';\nimport { useTreatments } from './hooks/useTreatments';\nimport { Treatment } from './Treatment';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nexport function Treatments() {\n  _s();\n  // replace with data from React Query\n  const treatments = useTreatments();\n  return /*#__PURE__*/_jsxDEV(Box, {\n    children: [/*#__PURE__*/_jsxDEV(Heading, {\n      mt: 10,\n      textAlign: \"center\",\n      children: \"Available Treatments\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 12,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(HStack, {\n      m: 10,\n      spacing: 8,\n      justify: \"center\",\n      children: treatments.map(treatmentData => /*#__PURE__*/_jsxDEV(Treatment, {\n        treatmentData: treatmentData\n      }, treatmentData.id, false, {\n        fileName: _jsxFileName,\n        lineNumber: 17,\n        columnNumber: 11\n      }, this))\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 15,\n      columnNumber: 7\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 11,\n    columnNumber: 5\n  }, this);\n}\n_s(Treatments, \"AHqNBLhKvYS6Jc4olndVgxjKa7s=\", false, function () {\n  return [useTreatments];\n});\n_c = Treatments;\nvar _c;\n$RefreshReg$(_c, \"Treatments\");","map":{"version":3,"names":["Box","Heading","HStack","useTreatments","Treatment","Treatments","treatments","map","treatmentData","id"],"sources":["/home/pc/Desktop/react-projects/react-projects/lazy-days/client/src/components/treatments/Treatments.tsx"],"sourcesContent":["import { Box, Heading, HStack } from '@chakra-ui/react';\nimport { ReactElement } from 'react';\n\nimport { useTreatments } from './hooks/useTreatments';\nimport { Treatment } from './Treatment';\n\nexport function Treatments(): ReactElement {\n  // replace with data from React Query\n  const treatments = useTreatments();\n  return (\n    <Box>\n      <Heading mt={10} textAlign=\"center\">\n        Available Treatments\n      </Heading>\n      <HStack m={10} spacing={8} justify=\"center\">\n        {treatments.map((treatmentData) => (\n          <Treatment key={treatmentData.id} treatmentData={treatmentData} />\n        ))}\n      </HStack>\n    </Box>\n  );\n}\n"],"mappings":";;AAAA,SAASA,GAAG,EAAEC,OAAO,EAAEC,MAAM,QAAQ,kBAAkB;AAGvD,SAASC,aAAa,QAAQ,uBAAuB;AACrD,SAASC,SAAS,QAAQ,aAAa;AAAC;AAExC,OAAO,SAASC,UAAU,GAAiB;EAAA;EACzC;EACA,MAAMC,UAAU,GAAGH,aAAa,EAAE;EAClC,oBACE,QAAC,GAAG;IAAA,wBACF,QAAC,OAAO;MAAC,EAAE,EAAE,EAAG;MAAC,SAAS,EAAC,QAAQ;MAAA,UAAC;IAEpC;MAAA;MAAA;MAAA;IAAA,QAAU,eACV,QAAC,MAAM;MAAC,CAAC,EAAE,EAAG;MAAC,OAAO,EAAE,CAAE;MAAC,OAAO,EAAC,QAAQ;MAAA,UACxCG,UAAU,CAACC,GAAG,CAAEC,aAAa,iBAC5B,QAAC,SAAS;QAAwB,aAAa,EAAEA;MAAc,GAA/CA,aAAa,CAACC,EAAE;QAAA;QAAA;QAAA;MAAA,QACjC;IAAC;MAAA;MAAA;MAAA;IAAA,QACK;EAAA;IAAA;IAAA;IAAA;EAAA,QACL;AAEV;AAAC,GAfeJ,UAAU;EAAA,QAELF,aAAa;AAAA;AAAA,KAFlBE,UAAU;AAAA;AAAA"},"metadata":{},"sourceType":"module"}