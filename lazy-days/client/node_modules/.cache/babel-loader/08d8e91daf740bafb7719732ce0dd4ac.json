{"ast":null,"code":"import { __rest, __assign } from 'tslib';\nimport { detectAnimationFromOptions } from './utils/detect-animation-from-options.js';\nimport sync, { cancelSync } from 'framesync';\nimport { interpolate } from '../utils/interpolate.js';\nimport { hasRepeatDelayElapsed, reverseElapsed, loopElapsed } from './utils/elapsed.js';\nvar framesync = function (update) {\n  var passTimestamp = function (_a) {\n    var delta = _a.delta;\n    return update(delta);\n  };\n  return {\n    start: function () {\n      return sync.update(passTimestamp, true);\n    },\n    stop: function () {\n      return cancelSync.update(passTimestamp);\n    }\n  };\n};\nfunction animate(_a) {\n  var _b, _c;\n  var from = _a.from,\n    _d = _a.autoplay,\n    autoplay = _d === void 0 ? true : _d,\n    _e = _a.driver,\n    driver = _e === void 0 ? framesync : _e,\n    _f = _a.elapsed,\n    elapsed = _f === void 0 ? 0 : _f,\n    _g = _a.repeat,\n    repeatMax = _g === void 0 ? 0 : _g,\n    _h = _a.repeatType,\n    repeatType = _h === void 0 ? \"loop\" : _h,\n    _j = _a.repeatDelay,\n    repeatDelay = _j === void 0 ? 0 : _j,\n    onPlay = _a.onPlay,\n    onStop = _a.onStop,\n    onComplete = _a.onComplete,\n    onRepeat = _a.onRepeat,\n    onUpdate = _a.onUpdate,\n    options = __rest(_a, [\"from\", \"autoplay\", \"driver\", \"elapsed\", \"repeat\", \"repeatType\", \"repeatDelay\", \"onPlay\", \"onStop\", \"onComplete\", \"onRepeat\", \"onUpdate\"]);\n  var to = options.to;\n  var driverControls;\n  var repeatCount = 0;\n  var computedDuration = options.duration;\n  var latest;\n  var isComplete = false;\n  var isForwardPlayback = true;\n  var interpolateFromNumber;\n  var animator = detectAnimationFromOptions(options);\n  if ((_c = (_b = animator).needsInterpolation) === null || _c === void 0 ? void 0 : _c.call(_b, from, to)) {\n    interpolateFromNumber = interpolate([0, 100], [from, to], {\n      clamp: false\n    });\n    from = 0;\n    to = 100;\n  }\n  var animation = animator(__assign(__assign({}, options), {\n    from: from,\n    to: to\n  }));\n  function repeat() {\n    repeatCount++;\n    if (repeatType === \"reverse\") {\n      isForwardPlayback = repeatCount % 2 === 0;\n      elapsed = reverseElapsed(elapsed, computedDuration, repeatDelay, isForwardPlayback);\n    } else {\n      elapsed = loopElapsed(elapsed, computedDuration, repeatDelay);\n      if (repeatType === \"mirror\") animation.flipTarget();\n    }\n    isComplete = false;\n    onRepeat && onRepeat();\n  }\n  function complete() {\n    driverControls.stop();\n    onComplete && onComplete();\n  }\n  function update(delta) {\n    if (!isForwardPlayback) delta = -delta;\n    elapsed += delta;\n    if (!isComplete) {\n      var state = animation.next(Math.max(0, elapsed));\n      latest = state.value;\n      if (interpolateFromNumber) latest = interpolateFromNumber(latest);\n      isComplete = isForwardPlayback ? state.done : elapsed <= 0;\n    }\n    onUpdate === null || onUpdate === void 0 ? void 0 : onUpdate(latest);\n    if (isComplete) {\n      if (repeatCount === 0) computedDuration !== null && computedDuration !== void 0 ? computedDuration : computedDuration = elapsed;\n      if (repeatCount < repeatMax) {\n        hasRepeatDelayElapsed(elapsed, computedDuration, repeatDelay, isForwardPlayback) && repeat();\n      } else {\n        complete();\n      }\n    }\n  }\n  function play() {\n    onPlay === null || onPlay === void 0 ? void 0 : onPlay();\n    driverControls = driver(update);\n    driverControls.start();\n  }\n  autoplay && play();\n  return {\n    stop: function () {\n      onStop === null || onStop === void 0 ? void 0 : onStop();\n      driverControls.stop();\n    }\n  };\n}\nexport { animate };","map":{"version":3,"names":["__rest","__assign","detectAnimationFromOptions","sync","cancelSync","interpolate","hasRepeatDelayElapsed","reverseElapsed","loopElapsed","framesync","update","passTimestamp","_a","delta","start","stop","animate","_b","_c","from","_d","autoplay","_e","driver","_f","elapsed","_g","repeat","repeatMax","_h","repeatType","_j","repeatDelay","onPlay","onStop","onComplete","onRepeat","onUpdate","options","to","driverControls","repeatCount","computedDuration","duration","latest","isComplete","isForwardPlayback","interpolateFromNumber","animator","needsInterpolation","call","clamp","animation","flipTarget","complete","state","next","Math","max","value","done","play"],"sources":["/home/pc/Desktop/react-projects/react-projects/lazy-days/client/node_modules/popmotion/dist/es/animations/index.js"],"sourcesContent":["import { __rest, __assign } from 'tslib';\nimport { detectAnimationFromOptions } from './utils/detect-animation-from-options.js';\nimport sync, { cancelSync } from 'framesync';\nimport { interpolate } from '../utils/interpolate.js';\nimport { hasRepeatDelayElapsed, reverseElapsed, loopElapsed } from './utils/elapsed.js';\n\nvar framesync = function (update) {\n    var passTimestamp = function (_a) {\n        var delta = _a.delta;\n        return update(delta);\n    };\n    return {\n        start: function () { return sync.update(passTimestamp, true); },\n        stop: function () { return cancelSync.update(passTimestamp); },\n    };\n};\nfunction animate(_a) {\n    var _b, _c;\n    var from = _a.from, _d = _a.autoplay, autoplay = _d === void 0 ? true : _d, _e = _a.driver, driver = _e === void 0 ? framesync : _e, _f = _a.elapsed, elapsed = _f === void 0 ? 0 : _f, _g = _a.repeat, repeatMax = _g === void 0 ? 0 : _g, _h = _a.repeatType, repeatType = _h === void 0 ? \"loop\" : _h, _j = _a.repeatDelay, repeatDelay = _j === void 0 ? 0 : _j, onPlay = _a.onPlay, onStop = _a.onStop, onComplete = _a.onComplete, onRepeat = _a.onRepeat, onUpdate = _a.onUpdate, options = __rest(_a, [\"from\", \"autoplay\", \"driver\", \"elapsed\", \"repeat\", \"repeatType\", \"repeatDelay\", \"onPlay\", \"onStop\", \"onComplete\", \"onRepeat\", \"onUpdate\"]);\n    var to = options.to;\n    var driverControls;\n    var repeatCount = 0;\n    var computedDuration = options.duration;\n    var latest;\n    var isComplete = false;\n    var isForwardPlayback = true;\n    var interpolateFromNumber;\n    var animator = detectAnimationFromOptions(options);\n    if ((_c = (_b = animator).needsInterpolation) === null || _c === void 0 ? void 0 : _c.call(_b, from, to)) {\n        interpolateFromNumber = interpolate([0, 100], [from, to], {\n            clamp: false,\n        });\n        from = 0;\n        to = 100;\n    }\n    var animation = animator(__assign(__assign({}, options), { from: from, to: to }));\n    function repeat() {\n        repeatCount++;\n        if (repeatType === \"reverse\") {\n            isForwardPlayback = repeatCount % 2 === 0;\n            elapsed = reverseElapsed(elapsed, computedDuration, repeatDelay, isForwardPlayback);\n        }\n        else {\n            elapsed = loopElapsed(elapsed, computedDuration, repeatDelay);\n            if (repeatType === \"mirror\")\n                animation.flipTarget();\n        }\n        isComplete = false;\n        onRepeat && onRepeat();\n    }\n    function complete() {\n        driverControls.stop();\n        onComplete && onComplete();\n    }\n    function update(delta) {\n        if (!isForwardPlayback)\n            delta = -delta;\n        elapsed += delta;\n        if (!isComplete) {\n            var state = animation.next(Math.max(0, elapsed));\n            latest = state.value;\n            if (interpolateFromNumber)\n                latest = interpolateFromNumber(latest);\n            isComplete = isForwardPlayback ? state.done : elapsed <= 0;\n        }\n        onUpdate === null || onUpdate === void 0 ? void 0 : onUpdate(latest);\n        if (isComplete) {\n            if (repeatCount === 0)\n                computedDuration !== null && computedDuration !== void 0 ? computedDuration : (computedDuration = elapsed);\n            if (repeatCount < repeatMax) {\n                hasRepeatDelayElapsed(elapsed, computedDuration, repeatDelay, isForwardPlayback) && repeat();\n            }\n            else {\n                complete();\n            }\n        }\n    }\n    function play() {\n        onPlay === null || onPlay === void 0 ? void 0 : onPlay();\n        driverControls = driver(update);\n        driverControls.start();\n    }\n    autoplay && play();\n    return {\n        stop: function () {\n            onStop === null || onStop === void 0 ? void 0 : onStop();\n            driverControls.stop();\n        },\n    };\n}\n\nexport { animate };\n"],"mappings":"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"},"metadata":{},"sourceType":"module"}