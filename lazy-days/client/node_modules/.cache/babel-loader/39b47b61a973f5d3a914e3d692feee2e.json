{"ast":null,"code":"import dayjs from 'dayjs';\nexport function appointmentInPast(appointmentData) {\n  const now = dayjs();\n  return dayjs(appointmentData.dateTime) < now;\n}\nexport function getAppointmentColor(appointmentData, userId) {\n  const taken = !!appointmentData.userId;\n  if (taken || appointmentInPast(appointmentData)) {\n    const textColor = 'black';\n    const bgColor = appointmentData.userId === userId ? 'white' : 'gray.300';\n    return [textColor, bgColor];\n  }\n  const textColor = 'white';\n  switch (appointmentData.treatmentName.toLowerCase()) {\n    case 'massage':\n      return [textColor, 'purple.700'];\n    case 'scrub':\n      return [textColor, 'blue.700'];\n    case 'facial':\n      return [textColor, 'green.700'];\n    default:\n      return [textColor, 'black'];\n  }\n}\nexport function getAvailableAppointments(appointments, user) {\n  // clone so as not to mutate argument directly\n  const filteredAppointments = {\n    ...appointments\n  };\n\n  // only keep appointments that are open (or taken by the logged-in user) and are not in the past)\n  Object.keys(filteredAppointments).forEach(date => {\n    filteredAppointments[date] = filteredAppointments[date].filter(appointment => (!appointment.userId || appointment.userId === (user === null || user === void 0 ? void 0 : user.id)) && !appointmentInPast(appointment));\n  });\n  return filteredAppointments;\n}","map":{"version":3,"names":["dayjs","appointmentInPast","appointmentData","now","dateTime","getAppointmentColor","userId","taken","textColor","bgColor","treatmentName","toLowerCase","getAvailableAppointments","appointments","user","filteredAppointments","Object","keys","forEach","date","filter","appointment","id"],"sources":["/home/pc/Desktop/react-projects/react-projects/lazy-days/client/src/components/appointments/utils.ts"],"sourcesContent":["import dayjs from 'dayjs';\n\nimport type {\n  Appointment,\n  AppointmentDateMap,\n  User,\n} from '../../../../shared/types';\n\nexport function appointmentInPast(appointmentData: Appointment): boolean {\n  const now = dayjs();\n  return dayjs(appointmentData.dateTime) < now;\n}\n\nexport function getAppointmentColor(\n  appointmentData: Appointment,\n  userId: number | undefined,\n): [string, string] {\n  const taken = !!appointmentData.userId;\n\n  if (taken || appointmentInPast(appointmentData)) {\n    const textColor = 'black';\n    const bgColor = appointmentData.userId === userId ? 'white' : 'gray.300';\n    return [textColor, bgColor];\n  }\n  const textColor = 'white';\n\n  switch (appointmentData.treatmentName.toLowerCase()) {\n    case 'massage':\n      return [textColor, 'purple.700'];\n    case 'scrub':\n      return [textColor, 'blue.700'];\n    case 'facial':\n      return [textColor, 'green.700'];\n    default:\n      return [textColor, 'black'];\n  }\n}\n\nexport function getAvailableAppointments(\n  appointments: AppointmentDateMap,\n  user: User | null,\n): AppointmentDateMap {\n  // clone so as not to mutate argument directly\n  const filteredAppointments = { ...appointments };\n\n  // only keep appointments that are open (or taken by the logged-in user) and are not in the past)\n  Object.keys(filteredAppointments).forEach((date) => {\n    filteredAppointments[date] = filteredAppointments[date].filter(\n      (appointment: Appointment) =>\n        (!appointment.userId || appointment.userId === user?.id) &&\n        !appointmentInPast(appointment),\n    );\n  });\n\n  return filteredAppointments;\n}\n"],"mappings":"AAAA,OAAOA,KAAK,MAAM,OAAO;AAQzB,OAAO,SAASC,iBAAiB,CAACC,eAA4B,EAAW;EACvE,MAAMC,GAAG,GAAGH,KAAK,EAAE;EACnB,OAAOA,KAAK,CAACE,eAAe,CAACE,QAAQ,CAAC,GAAGD,GAAG;AAC9C;AAEA,OAAO,SAASE,mBAAmB,CACjCH,eAA4B,EAC5BI,MAA0B,EACR;EAClB,MAAMC,KAAK,GAAG,CAAC,CAACL,eAAe,CAACI,MAAM;EAEtC,IAAIC,KAAK,IAAIN,iBAAiB,CAACC,eAAe,CAAC,EAAE;IAC/C,MAAMM,SAAS,GAAG,OAAO;IACzB,MAAMC,OAAO,GAAGP,eAAe,CAACI,MAAM,KAAKA,MAAM,GAAG,OAAO,GAAG,UAAU;IACxE,OAAO,CAACE,SAAS,EAAEC,OAAO,CAAC;EAC7B;EACA,MAAMD,SAAS,GAAG,OAAO;EAEzB,QAAQN,eAAe,CAACQ,aAAa,CAACC,WAAW,EAAE;IACjD,KAAK,SAAS;MACZ,OAAO,CAACH,SAAS,EAAE,YAAY,CAAC;IAClC,KAAK,OAAO;MACV,OAAO,CAACA,SAAS,EAAE,UAAU,CAAC;IAChC,KAAK,QAAQ;MACX,OAAO,CAACA,SAAS,EAAE,WAAW,CAAC;IACjC;MACE,OAAO,CAACA,SAAS,EAAE,OAAO,CAAC;EAAC;AAElC;AAEA,OAAO,SAASI,wBAAwB,CACtCC,YAAgC,EAChCC,IAAiB,EACG;EACpB;EACA,MAAMC,oBAAoB,GAAG;IAAE,GAAGF;EAAa,CAAC;;EAEhD;EACAG,MAAM,CAACC,IAAI,CAACF,oBAAoB,CAAC,CAACG,OAAO,CAAEC,IAAI,IAAK;IAClDJ,oBAAoB,CAACI,IAAI,CAAC,GAAGJ,oBAAoB,CAACI,IAAI,CAAC,CAACC,MAAM,CAC3DC,WAAwB,IACvB,CAAC,CAACA,WAAW,CAACf,MAAM,IAAIe,WAAW,CAACf,MAAM,MAAKQ,IAAI,aAAJA,IAAI,uBAAJA,IAAI,CAAEQ,EAAE,MACvD,CAACrB,iBAAiB,CAACoB,WAAW,CAAC,CAClC;EACH,CAAC,CAAC;EAEF,OAAON,oBAAoB;AAC7B"},"metadata":{},"sourceType":"module"}