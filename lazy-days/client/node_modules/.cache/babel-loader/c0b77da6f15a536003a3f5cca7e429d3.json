{"ast":null,"code":"var _s = $RefreshSig$();\nimport { axiosInstance } from '../../../axiosInstance';\n// for when we need a query function for useQuery\nasync function getTreatments() {\n  const {\n    data\n  } = await axiosInstance.get('/treatments');\n  return data;\n}\nexport function useTreatments() {\n  _s();\n  // TODO: get data from server via useQuery\n  useQuery();\n  return [];\n}\n_s(useTreatments, \"4ZpngI1uv+Uo3WQHEZmTQ5FNM+k=\", true);","map":{"version":3,"names":["axiosInstance","getTreatments","data","get","useTreatments","useQuery"],"sources":["/home/pc/Desktop/react-projects/react-projects/lazy-days/client/src/components/treatments/hooks/useTreatments.ts"],"sourcesContent":["import type { Treatment } from '../../../../../shared/types';\nimport { axiosInstance } from '../../../axiosInstance';\nimport { queryKeys } from '../../../react-query/constants';\nimport { useCustomToast } from '../../app/hooks/useCustomToast';\n\n// for when we need a query function for useQuery\nasync function getTreatments(): Promise<Treatment[]> {\n  const { data } = await axiosInstance.get('/treatments');\n  return data;\n}\n\nexport function useTreatments(): Treatment[] {\n  // TODO: get data from server via useQuery\n  useQuery()\n  \n  return [];\n}\n"],"mappings":";AACA,SAASA,aAAa,QAAQ,wBAAwB;AAItD;AACA,eAAeC,aAAa,GAAyB;EACnD,MAAM;IAAEC;EAAK,CAAC,GAAG,MAAMF,aAAa,CAACG,GAAG,CAAC,aAAa,CAAC;EACvD,OAAOD,IAAI;AACb;AAEA,OAAO,SAASE,aAAa,GAAgB;EAAA;EAC3C;EACAC,QAAQ,EAAE;EAEV,OAAO,EAAE;AACX;AAAC,GALeD,aAAa"},"metadata":{},"sourceType":"module"}