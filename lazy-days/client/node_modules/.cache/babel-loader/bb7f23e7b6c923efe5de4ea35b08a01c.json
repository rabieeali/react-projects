{"ast":null,"code":"var _s = $RefreshSig$();\nimport { useCustomToast } from '../../app/hooks/useCustomToast';\n\n// for when server call is needed\n// async function removeAppointmentUser(appointment: Appointment): Promise<void> {\n//   const patchData = [{ op: 'remove', path: '/userId' }];\n//   await axiosInstance.patch(`/appointment/${appointment.id}`, {\n//     data: patchData,\n//   });\n// }\n\n// TODO: update return type\nexport function useCancelAppointment() {\n  _s();\n  const toast = useCustomToast();\n\n  // TODO: replace with mutate function\n  return appointment => {\n    // nothing to see here\n  };\n}\n_s(useCancelAppointment, \"WLzb0O94OqAgIIC/eBM2nWut5JM=\", false, function () {\n  return [useCustomToast];\n});","map":{"version":3,"names":["useCustomToast","useCancelAppointment","toast","appointment"],"sources":["/home/pc/Desktop/react-projects/react-projects/lazy-days/client/src/components/appointments/hooks/useCancelAppointment.ts"],"sourcesContent":["import { Appointment } from '../../../../../shared/types';\nimport { axiosInstance } from '../../../axiosInstance';\nimport { queryKeys } from '../../../react-query/constants';\nimport { useCustomToast } from '../../app/hooks/useCustomToast';\n\n// for when server call is needed\n// async function removeAppointmentUser(appointment: Appointment): Promise<void> {\n//   const patchData = [{ op: 'remove', path: '/userId' }];\n//   await axiosInstance.patch(`/appointment/${appointment.id}`, {\n//     data: patchData,\n//   });\n// }\n\n// TODO: update return type\nexport function useCancelAppointment(): (appointment: Appointment) => void {\n  const toast = useCustomToast();\n\n  // TODO: replace with mutate function\n  return (appointment: Appointment) => {\n    // nothing to see here\n  };\n}\n"],"mappings":";AAGA,SAASA,cAAc,QAAQ,gCAAgC;;AAE/D;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA,OAAO,SAASC,oBAAoB,GAAuC;EAAA;EACzE,MAAMC,KAAK,GAAGF,cAAc,EAAE;;EAE9B;EACA,OAAQG,WAAwB,IAAK;IACnC;EAAA,CACD;AACH;AAAC,GAPeF,oBAAoB;EAAA,QACpBD,cAAc;AAAA"},"metadata":{},"sourceType":"module"}