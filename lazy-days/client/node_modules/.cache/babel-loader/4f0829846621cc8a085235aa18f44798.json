{"ast":null,"code":"var _s = $RefreshSig$();\nimport { useQuery } from 'react-query';\nimport { axiosInstance } from '../../../axiosInstance';\nimport { queryKeys } from '../../../react-query/constants';\n// for when we need a query function for useQuery\nasync function getTreatments() {\n  const {\n    data\n  } = await axiosInstance.get('/treatments');\n  return data;\n}\nexport function useTreatments() {\n  _s();\n  const fallBack = [];\n  const {\n    data = fallBack\n  } = useQuery(queryKeys.treatments, getTreatments);\n  return data;\n}\n_s(useTreatments, \"HmzpYEh/iru2PptlaOVSYaIoers=\", false, function () {\n  return [useQuery];\n});","map":{"version":3,"names":["useQuery","axiosInstance","queryKeys","getTreatments","data","get","useTreatments","fallBack","treatments"],"sources":["/home/pc/Desktop/react-projects/react-projects/lazy-days/client/src/components/treatments/hooks/useTreatments.ts"],"sourcesContent":["import { useQuery } from 'react-query';\nimport type { Treatment } from '../../../../../shared/types';\nimport { axiosInstance } from '../../../axiosInstance';\nimport { queryKeys } from '../../../react-query/constants';\nimport { useCustomToast } from '../../app/hooks/useCustomToast';\n\n// for when we need a query function for useQuery\nasync function getTreatments(): Promise<Treatment[]> {\n  const { data } = await axiosInstance.get('/treatments');\n  return data;\n}\n\nexport function useTreatments(): Treatment[] {\nconst fallBack = []\n  const { data= fallBack } = useQuery(queryKeys.treatments, getTreatments);\n\n  return data;\n}\n"],"mappings":";AAAA,SAASA,QAAQ,QAAQ,aAAa;AAEtC,SAASC,aAAa,QAAQ,wBAAwB;AACtD,SAASC,SAAS,QAAQ,gCAAgC;AAG1D;AACA,eAAeC,aAAa,GAAyB;EACnD,MAAM;IAAEC;EAAK,CAAC,GAAG,MAAMH,aAAa,CAACI,GAAG,CAAC,aAAa,CAAC;EACvD,OAAOD,IAAI;AACb;AAEA,OAAO,SAASE,aAAa,GAAgB;EAAA;EAC7C,MAAMC,QAAQ,GAAG,EAAE;EACjB,MAAM;IAAEH,IAAI,GAAEG;EAAS,CAAC,GAAGP,QAAQ,CAACE,SAAS,CAACM,UAAU,EAAEL,aAAa,CAAC;EAExE,OAAOC,IAAI;AACb;AAAC,GALeE,aAAa;EAAA,QAEAN,QAAQ;AAAA"},"metadata":{},"sourceType":"module"}