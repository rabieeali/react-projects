{"ast":null,"code":"import { updateBoxDelta } from '../../utils/geometry/delta-calc.js';\nimport { resetBox, applyTreeDeltas } from '../../utils/geometry/delta-apply.js';\nfunction updateLayoutDeltas(_a, _b, treePath, transformOrigin) {\n  var delta = _a.delta,\n    layout = _a.layout,\n    layoutCorrected = _a.layoutCorrected,\n    treeScale = _a.treeScale;\n  var target = _b.target;\n  /**\n   * Reset the corrected box with the latest values from box, as we're then going\n   * to perform mutative operations on it.\n   */\n  resetBox(layoutCorrected, layout);\n  /**\n   * Apply all the parent deltas to this box to produce the corrected box. This\n   * is the layout box, as it will appear on screen as a result of the transforms of its parents.\n   */\n  applyTreeDeltas(layoutCorrected, treeScale, treePath);\n  /**\n   * Update the delta between the corrected box and the target box before user-set transforms were applied.\n   * This will allow us to calculate the corrected borderRadius and boxShadow to compensate\n   * for our layout reprojection, but still allow them to be scaled correctly by the user.\n   * It might be that to simplify this we may want to accept that user-set scale1 is also corrected\n   * and we wouldn't have to keep and calc both deltas, OR we could support a user setting\n   * to allow people to choose whether these styles are corrected based on just the\n   * layout reprojection or the final bounding box.\n   */\n  updateBoxDelta(delta, layoutCorrected, target, transformOrigin);\n}\nexport { updateLayoutDeltas };","map":{"version":3,"names":["updateBoxDelta","resetBox","applyTreeDeltas","updateLayoutDeltas","_a","_b","treePath","transformOrigin","delta","layout","layoutCorrected","treeScale","target"],"sources":["/home/pc/Desktop/react-projects/react-projects/lazy-days/client/node_modules/framer-motion/dist/es/render/utils/projection.js"],"sourcesContent":["import { updateBoxDelta } from '../../utils/geometry/delta-calc.js';\nimport { resetBox, applyTreeDeltas } from '../../utils/geometry/delta-apply.js';\n\nfunction updateLayoutDeltas(_a, _b, treePath, transformOrigin) {\n    var delta = _a.delta, layout = _a.layout, layoutCorrected = _a.layoutCorrected, treeScale = _a.treeScale;\n    var target = _b.target;\n    /**\n     * Reset the corrected box with the latest values from box, as we're then going\n     * to perform mutative operations on it.\n     */\n    resetBox(layoutCorrected, layout);\n    /**\n     * Apply all the parent deltas to this box to produce the corrected box. This\n     * is the layout box, as it will appear on screen as a result of the transforms of its parents.\n     */\n    applyTreeDeltas(layoutCorrected, treeScale, treePath);\n    /**\n     * Update the delta between the corrected box and the target box before user-set transforms were applied.\n     * This will allow us to calculate the corrected borderRadius and boxShadow to compensate\n     * for our layout reprojection, but still allow them to be scaled correctly by the user.\n     * It might be that to simplify this we may want to accept that user-set scale1 is also corrected\n     * and we wouldn't have to keep and calc both deltas, OR we could support a user setting\n     * to allow people to choose whether these styles are corrected based on just the\n     * layout reprojection or the final bounding box.\n     */\n    updateBoxDelta(delta, layoutCorrected, target, transformOrigin);\n}\n\nexport { updateLayoutDeltas };\n"],"mappings":"AAAA,SAASA,cAAc,QAAQ,oCAAoC;AACnE,SAASC,QAAQ,EAAEC,eAAe,QAAQ,qCAAqC;AAE/E,SAASC,kBAAkB,CAACC,EAAE,EAAEC,EAAE,EAAEC,QAAQ,EAAEC,eAAe,EAAE;EAC3D,IAAIC,KAAK,GAAGJ,EAAE,CAACI,KAAK;IAAEC,MAAM,GAAGL,EAAE,CAACK,MAAM;IAAEC,eAAe,GAAGN,EAAE,CAACM,eAAe;IAAEC,SAAS,GAAGP,EAAE,CAACO,SAAS;EACxG,IAAIC,MAAM,GAAGP,EAAE,CAACO,MAAM;EACtB;AACJ;AACA;AACA;EACIX,QAAQ,CAACS,eAAe,EAAED,MAAM,CAAC;EACjC;AACJ;AACA;AACA;EACIP,eAAe,CAACQ,eAAe,EAAEC,SAAS,EAAEL,QAAQ,CAAC;EACrD;AACJ;AACA;AACA;AACA;AACA;AACA;AACA;AACA;EACIN,cAAc,CAACQ,KAAK,EAAEE,eAAe,EAAEE,MAAM,EAAEL,eAAe,CAAC;AACnE;AAEA,SAASJ,kBAAkB"},"metadata":{},"sourceType":"module"}