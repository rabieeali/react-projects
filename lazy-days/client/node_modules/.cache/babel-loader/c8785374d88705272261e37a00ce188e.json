{"ast":null,"code":"var _s = $RefreshSig$();\nimport { useToast } from '@chakra-ui/react';\n// a wrapper around Chakra UI's useToast that has my default options applied\nexport function useCustomToast() {\n  _s();\n  return useToast({\n    isClosable: true,\n    variant: 'subtle',\n    position: 'bottom'\n  });\n}\n_s(useCustomToast, \"zmshFnTy2h/BI3RcMmgy8WlZc1c=\", false, function () {\n  return [useToast];\n});","map":{"version":3,"names":["useToast","useCustomToast","isClosable","variant","position"],"sources":["/home/pc/Desktop/react-projects/react-projects/lazy-days/client/src/components/app/hooks/useCustomToast.ts"],"sourcesContent":["import {\n  CloseAllToastsOptions,\n  ToastId,\n  useToast,\n  UseToastOptions,\n} from '@chakra-ui/react';\n\ninterface UseCustomToast {\n  (options?: UseToastOptions | undefined): string | number | undefined;\n  close: (id: ToastId) => void;\n  closeAll: (options?: CloseAllToastsOptions | undefined) => void;\n  update(id: ToastId, options): void;\n  isActive: (id: ToastId) => boolean | undefined;\n}\n\n// a wrapper around Chakra UI's useToast that has my default options applied\nexport function useCustomToast(): UseCustomToast {\n  return useToast({\n    isClosable: true,\n    variant: 'subtle',\n    position: 'bottom',\n  });\n}\n"],"mappings":";AAAA,SAGEA,QAAQ,QAEH,kBAAkB;AAUzB;AACA,OAAO,SAASC,cAAc,GAAmB;EAAA;EAC/C,OAAOD,QAAQ,CAAC;IACdE,UAAU,EAAE,IAAI;IAChBC,OAAO,EAAE,QAAQ;IACjBC,QAAQ,EAAE;EACZ,CAAC,CAAC;AACJ;AAAC,GANeH,cAAc;EAAA,QACrBD,QAAQ;AAAA"},"metadata":{},"sourceType":"module"}