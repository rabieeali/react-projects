{"ast":null,"code":"import * as React from 'react';\nimport { RemoveScrollBar } from 'react-remove-scroll-bar';\nimport { styleSingleton } from 'react-style-singleton';\nimport { handleScroll, locationCouldBeScrolled } from './handleScroll';\nimport { nonPassive } from './aggresiveCapture';\nexport var getTouchXY = function (event) {\n  return 'changedTouches' in event ? [event.changedTouches[0].clientX, event.changedTouches[0].clientY] : [0, 0];\n};\nexport var getDeltaXY = function (event) {\n  return [event.deltaX, event.deltaY];\n};\nvar extractRef = function (ref) {\n  return ref && 'current' in ref ? ref.current : ref;\n};\nvar deltaCompare = function (x, y) {\n  return x[0] === y[0] && x[1] === y[1];\n};\nvar generateStyle = function (id) {\n  return \"\\n  .block-interactivity-\" + id + \" {pointer-events: none;}\\n  .allow-interactivity-\" + id + \" {pointer-events: all;}\\n\";\n};\nvar idCounter = 0;\nvar lockStack = [];\nexport function RemoveScrollSideCar(props) {\n  var shouldPreventQueue = React.useRef([]);\n  var touchStartRef = React.useRef([0, 0]);\n  var activeAxis = React.useRef();\n  var id = React.useState(idCounter++)[0];\n  var Style = React.useState(function () {\n    return styleSingleton();\n  })[0];\n  var lastProps = React.useRef(props);\n  React.useEffect(function () {\n    lastProps.current = props;\n  }, [props]);\n  React.useEffect(function () {\n    if (props.inert) {\n      document.body.classList.add(\"block-interactivity-\" + id);\n      var allow_1 = [props.lockRef.current].concat((props.shards || []).map(extractRef)).filter(Boolean);\n      allow_1.forEach(function (el) {\n        return el.classList.add(\"allow-interactivity-\" + id);\n      });\n      return function () {\n        document.body.classList.remove(\"block-interactivity-\" + id);\n        allow_1.forEach(function (el) {\n          return el.classList.remove(\"allow-interactivity-\" + id);\n        });\n      };\n    }\n    return;\n  }, [props.inert, props.lockRef.current, props.shards]);\n  var shouldCancelEvent = React.useCallback(function (event, parent) {\n    if ('touches' in event && event.touches.length === 2) {\n      return !lastProps.current.allowPinchZoom;\n    }\n    var touch = getTouchXY(event);\n    var touchStart = touchStartRef.current;\n    var deltaX = 'deltaX' in event ? event.deltaX : touchStart[0] - touch[0];\n    var deltaY = 'deltaY' in event ? event.deltaY : touchStart[1] - touch[1];\n    var currentAxis;\n    var target = event.target;\n    var moveDirection = Math.abs(deltaX) > Math.abs(deltaY) ? 'h' : 'v';\n    var canBeScrolledInMainDirection = locationCouldBeScrolled(moveDirection, target);\n    if (!canBeScrolledInMainDirection) {\n      return true;\n    }\n    if (canBeScrolledInMainDirection) {\n      currentAxis = moveDirection;\n    } else {\n      currentAxis = moveDirection === 'v' ? 'h' : 'v';\n      canBeScrolledInMainDirection = locationCouldBeScrolled(moveDirection, target);\n      // other axis might be not scrollable\n    }\n\n    if (!canBeScrolledInMainDirection) {\n      return false;\n    }\n    if (!activeAxis.current && 'changedTouches' in event && (deltaX || deltaY)) {\n      activeAxis.current = currentAxis;\n    }\n    if (!currentAxis) {\n      return true;\n    }\n    var cancelingAxis = activeAxis.current || currentAxis;\n    return handleScroll(cancelingAxis, parent, event, cancelingAxis === 'h' ? deltaX : deltaY, true);\n  }, []);\n  var shouldPrevent = React.useCallback(function (_event) {\n    var event = _event;\n    if (!lockStack.length || lockStack[lockStack.length - 1] !== Style) {\n      // not the last active\n      return;\n    }\n    var delta = 'deltaY' in event ? getDeltaXY(event) : getTouchXY(event);\n    var sourceEvent = shouldPreventQueue.current.filter(function (e) {\n      return e.name === event.type && e.target === event.target && deltaCompare(e.delta, delta);\n    })[0];\n    // self event, and should be canceled\n    if (sourceEvent && sourceEvent.should) {\n      event.preventDefault();\n      return;\n    }\n    // outside or shard event\n    if (!sourceEvent) {\n      var shardNodes = (lastProps.current.shards || []).map(extractRef).filter(Boolean).filter(function (node) {\n        return node.contains(event.target);\n      });\n      var shouldStop = shardNodes.length > 0 ? shouldCancelEvent(event, shardNodes[0]) : !lastProps.current.noIsolation;\n      if (shouldStop) {\n        event.preventDefault();\n      }\n    }\n  }, []);\n  var shouldCancel = React.useCallback(function (name, delta, target, should) {\n    var event = {\n      name: name,\n      delta: delta,\n      target: target,\n      should: should\n    };\n    shouldPreventQueue.current.push(event);\n    setTimeout(function () {\n      shouldPreventQueue.current = shouldPreventQueue.current.filter(function (e) {\n        return e !== event;\n      });\n    }, 1);\n  }, []);\n  var scrollTouchStart = React.useCallback(function (event) {\n    touchStartRef.current = getTouchXY(event);\n    activeAxis.current = undefined;\n  }, []);\n  var scrollWheel = React.useCallback(function (event) {\n    shouldCancel(event.type, getDeltaXY(event), event.target, shouldCancelEvent(event, props.lockRef.current));\n  }, []);\n  var scrollTouchMove = React.useCallback(function (event) {\n    shouldCancel(event.type, getTouchXY(event), event.target, shouldCancelEvent(event, props.lockRef.current));\n  }, []);\n  React.useEffect(function () {\n    lockStack.push(Style);\n    props.setCallbacks({\n      onScrollCapture: scrollWheel,\n      onWheelCapture: scrollWheel,\n      onTouchMoveCapture: scrollTouchMove\n    });\n    document.addEventListener('wheel', shouldPrevent, nonPassive);\n    document.addEventListener('touchmove', shouldPrevent, nonPassive);\n    document.addEventListener('touchstart', scrollTouchStart, nonPassive);\n    return function () {\n      lockStack = lockStack.filter(function (inst) {\n        return inst !== Style;\n      });\n      document.removeEventListener('wheel', shouldPrevent, nonPassive);\n      document.removeEventListener('touchmove', shouldPrevent, nonPassive);\n      document.removeEventListener('touchstart', scrollTouchStart, nonPassive);\n    };\n  }, []);\n  var removeScrollBar = props.removeScrollBar,\n    inert = props.inert;\n  return React.createElement(React.Fragment, null, inert ? React.createElement(Style, {\n    styles: generateStyle(id)\n  }) : null, removeScrollBar ? React.createElement(RemoveScrollBar, {\n    gapMode: \"margin\"\n  }) : null);\n}","map":{"version":3,"names":["React","RemoveScrollBar","styleSingleton","handleScroll","locationCouldBeScrolled","nonPassive","getTouchXY","event","changedTouches","clientX","clientY","getDeltaXY","deltaX","deltaY","extractRef","ref","current","deltaCompare","x","y","generateStyle","id","idCounter","lockStack","RemoveScrollSideCar","props","shouldPreventQueue","useRef","touchStartRef","activeAxis","useState","Style","lastProps","useEffect","inert","document","body","classList","add","allow_1","lockRef","concat","shards","map","filter","Boolean","forEach","el","remove","shouldCancelEvent","useCallback","parent","touches","length","allowPinchZoom","touch","touchStart","currentAxis","target","moveDirection","Math","abs","canBeScrolledInMainDirection","cancelingAxis","shouldPrevent","_event","delta","sourceEvent","e","name","type","should","preventDefault","shardNodes","node","contains","shouldStop","noIsolation","shouldCancel","push","setTimeout","scrollTouchStart","undefined","scrollWheel","scrollTouchMove","setCallbacks","onScrollCapture","onWheelCapture","onTouchMoveCapture","addEventListener","inst","removeEventListener","removeScrollBar","createElement","Fragment","styles","gapMode"],"sources":["/home/pc/Desktop/react-projects/react-projects/lazy-days/client/node_modules/react-remove-scroll/dist/es2015/SideEffect.js"],"sourcesContent":["import * as React from 'react';\nimport { RemoveScrollBar } from 'react-remove-scroll-bar';\nimport { styleSingleton } from 'react-style-singleton';\nimport { handleScroll, locationCouldBeScrolled } from './handleScroll';\nimport { nonPassive } from './aggresiveCapture';\nexport var getTouchXY = function (event) {\n    return 'changedTouches' in event\n        ? [event.changedTouches[0].clientX, event.changedTouches[0].clientY]\n        : [0, 0];\n};\nexport var getDeltaXY = function (event) { return [event.deltaX, event.deltaY]; };\nvar extractRef = function (ref) {\n    return ref && 'current' in ref ? ref.current : ref;\n};\nvar deltaCompare = function (x, y) {\n    return x[0] === y[0] && x[1] === y[1];\n};\nvar generateStyle = function (id) { return \"\\n  .block-interactivity-\" + id + \" {pointer-events: none;}\\n  .allow-interactivity-\" + id + \" {pointer-events: all;}\\n\"; };\nvar idCounter = 0;\nvar lockStack = [];\nexport function RemoveScrollSideCar(props) {\n    var shouldPreventQueue = React.useRef([]);\n    var touchStartRef = React.useRef([0, 0]);\n    var activeAxis = React.useRef();\n    var id = React.useState(idCounter++)[0];\n    var Style = React.useState(function () { return styleSingleton(); })[0];\n    var lastProps = React.useRef(props);\n    React.useEffect(function () {\n        lastProps.current = props;\n    }, [props]);\n    React.useEffect(function () {\n        if (props.inert) {\n            document.body.classList.add(\"block-interactivity-\" + id);\n            var allow_1 = [\n                props.lockRef.current\n            ].concat((props.shards || []).map(extractRef)).filter(Boolean);\n            allow_1.forEach(function (el) { return el.classList.add(\"allow-interactivity-\" + id); });\n            return function () {\n                document.body.classList.remove(\"block-interactivity-\" + id);\n                allow_1.forEach(function (el) {\n                    return el.classList.remove(\"allow-interactivity-\" + id);\n                });\n            };\n        }\n        return;\n    }, [props.inert, props.lockRef.current, props.shards]);\n    var shouldCancelEvent = React.useCallback(function (event, parent) {\n        if ('touches' in event && event.touches.length === 2) {\n            return !lastProps.current.allowPinchZoom;\n        }\n        var touch = getTouchXY(event);\n        var touchStart = touchStartRef.current;\n        var deltaX = 'deltaX' in event ? event.deltaX : touchStart[0] - touch[0];\n        var deltaY = 'deltaY' in event ? event.deltaY : touchStart[1] - touch[1];\n        var currentAxis;\n        var target = event.target;\n        var moveDirection = Math.abs(deltaX) > Math.abs(deltaY) ? 'h' : 'v';\n        var canBeScrolledInMainDirection = locationCouldBeScrolled(moveDirection, target);\n        if (!canBeScrolledInMainDirection) {\n            return true;\n        }\n        if (canBeScrolledInMainDirection) {\n            currentAxis = moveDirection;\n        }\n        else {\n            currentAxis = moveDirection === 'v' ? 'h' : 'v';\n            canBeScrolledInMainDirection = locationCouldBeScrolled(moveDirection, target);\n            // other axis might be not scrollable\n        }\n        if (!canBeScrolledInMainDirection) {\n            return false;\n        }\n        if (!activeAxis.current &&\n            'changedTouches' in event &&\n            (deltaX || deltaY)) {\n            activeAxis.current = currentAxis;\n        }\n        if (!currentAxis) {\n            return true;\n        }\n        var cancelingAxis = activeAxis.current || currentAxis;\n        return handleScroll(cancelingAxis, parent, event, cancelingAxis === 'h' ? deltaX : deltaY, true);\n    }, []);\n    var shouldPrevent = React.useCallback(function (_event) {\n        var event = _event;\n        if (!lockStack.length || lockStack[lockStack.length - 1] !== Style) {\n            // not the last active\n            return;\n        }\n        var delta = 'deltaY' in event ? getDeltaXY(event) : getTouchXY(event);\n        var sourceEvent = shouldPreventQueue.current.filter(function (e) {\n            return e.name === event.type &&\n                e.target === event.target &&\n                deltaCompare(e.delta, delta);\n        })[0];\n        // self event, and should be canceled\n        if (sourceEvent && sourceEvent.should) {\n            event.preventDefault();\n            return;\n        }\n        // outside or shard event\n        if (!sourceEvent) {\n            var shardNodes = (lastProps.current.shards || [])\n                .map(extractRef)\n                .filter(Boolean)\n                .filter(function (node) { return node.contains(event.target); });\n            var shouldStop = shardNodes.length > 0\n                ? shouldCancelEvent(event, shardNodes[0])\n                : !lastProps.current.noIsolation;\n            if (shouldStop) {\n                event.preventDefault();\n            }\n        }\n    }, []);\n    var shouldCancel = React.useCallback(function (name, delta, target, should) {\n        var event = { name: name, delta: delta, target: target, should: should };\n        shouldPreventQueue.current.push(event);\n        setTimeout(function () {\n            shouldPreventQueue.current = shouldPreventQueue.current.filter(function (e) { return e !== event; });\n        }, 1);\n    }, []);\n    var scrollTouchStart = React.useCallback(function (event) {\n        touchStartRef.current = getTouchXY(event);\n        activeAxis.current = undefined;\n    }, []);\n    var scrollWheel = React.useCallback(function (event) {\n        shouldCancel(event.type, getDeltaXY(event), event.target, shouldCancelEvent(event, props.lockRef.current));\n    }, []);\n    var scrollTouchMove = React.useCallback(function (event) {\n        shouldCancel(event.type, getTouchXY(event), event.target, shouldCancelEvent(event, props.lockRef.current));\n    }, []);\n    React.useEffect(function () {\n        lockStack.push(Style);\n        props.setCallbacks({\n            onScrollCapture: scrollWheel,\n            onWheelCapture: scrollWheel,\n            onTouchMoveCapture: scrollTouchMove\n        });\n        document.addEventListener('wheel', shouldPrevent, nonPassive);\n        document.addEventListener('touchmove', shouldPrevent, nonPassive);\n        document.addEventListener('touchstart', scrollTouchStart, nonPassive);\n        return function () {\n            lockStack = lockStack.filter(function (inst) { return inst !== Style; });\n            document.removeEventListener('wheel', shouldPrevent, nonPassive);\n            document.removeEventListener('touchmove', shouldPrevent, nonPassive);\n            document.removeEventListener('touchstart', scrollTouchStart, nonPassive);\n        };\n    }, []);\n    var removeScrollBar = props.removeScrollBar, inert = props.inert;\n    return (React.createElement(React.Fragment, null,\n        inert ? React.createElement(Style, { styles: generateStyle(id) }) : null,\n        removeScrollBar ? React.createElement(RemoveScrollBar, { gapMode: \"margin\" }) : null));\n}\n"],"mappings":"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"},"metadata":{},"sourceType":"module"}